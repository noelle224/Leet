problem name:- Minimum Flips to Make a OR b Equal to c
problem link:- https://leetcode.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/submissions/
 
description:- Given 3 positives numbers a, b and c. Return the minimum flips required in some bits of a and b to make ( a OR b == c ).
             (bitwise OR operation).
              Flip operation consists of change any single bit 1 to 0 or change the bit 0 to 1 in their binary representation.
              
solution:- 
 
 class Solution {
    public int minFlips(int a, int b, int c) {
         int d= a|b;
	    int d1= d^c;
	    int f=a^b;
	    int arr[]=new int[31];
	    int check=1;
	    int h=0;
	    for(int i=0;i<=31;i++)
	    {
	    	int m=d1 & check;
	    	if(m>0)
	    	{
	    		arr[h++]=i;
	    	}
	    	check=check<<1;
	    }
	    int result=0;
	   for(int i=0;i<h;i++)
	   {
		   int g=arr[i];
		   int checko=1<<g;
		   if((c & checko) >0)
		   {
			   result++;
		   }
		   else
		   {
			   if((f&checko)==0)
			   {
				   result+=2;
			   }
			   else
				   result+=1;
		   }
		   
	   }
        return result;
        
    }
}
