problem= extract the numbers from the string
problem link= https://practice.geeksforgeeks.org/problems/extract-the-number-from-the-string/0

description= Bastin once had trouble finding the numbers in a string. The numbers are distributed in a string across various test cases.
             There are various numbers in each test case you need to find the number in each test case. Each test case has various numbers in sequence. You need to find only those numbers which do not contain 9. For eg, if the string contains "hello this is alpha 5051 and 9475".You will extract 5051 and not 9475. You need only those numbers which are consecutive and you need to help him find the numbers.  

             Note: Use long long for storing the numbers from the string.
             
solution= 

public class TCS {

	 static <K, V> K getKey(Map<K, V> map, V value) {
		for (Map.Entry<K, V> entry : map.entrySet()) {
			if (value.equals(entry.getValue())) {
				return entry.getKey();
			}
		}
		return null;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner in=new Scanner(System.in);
		int t=in.nextInt();
		in.nextLine();
		while(t-->0)
		{String s=in.nextLine();
		StringBuilder sb=new StringBuilder();
		Map<String,Long> map=new HashMap<>();
		for(int i=0;i<s.length();i++)
		{
			if(s.charAt(i)>='0' && s.charAt(i)<='9')
			{
				sb.append(s.charAt(i));
			}
			else
			{
				String j=sb.toString();
				if(j.contains("9"))
				{
					j="";
					sb=new StringBuilder();
					continue;
				}
				if(j.length()>0)
				{
					//System.out.println(j);
					long h=Long.parseLong(j);
					map.put(j, h);
				    
				}
				sb=new StringBuilder();
			}
			if(i==(s.length()-1) && sb.length()>0)
			{
				String j=sb.toString();
				if(!j.contains("9"))
				{
					long h=Long.parseLong(j);
					map.put(j, h);
				}
			}
		}
		if(map.size()>0)
		{	long h=Collections.max(map.values());
		System.out.println(getKey(map,h));
		}
		else
			System.out.println("-1");
		}
     
	}

}
